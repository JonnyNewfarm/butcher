datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model User {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    name           String?
    email          String?   @unique
    emailVerified  DateTime?
    image          String?
    hashedPassword String?
    createdAt      DateTime? @default(now())
    updatedAt      DateTime? @updatedAt
    role           Role      @default(USER)
    orders         Order[]

    accounts Account[]
}

model Order {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    userId         String    @db.ObjectId
    totalAmount    Float?
    createdAt      DateTime? @default(now())
    updatedAt      DateTime? @updatedAt
    name           String?
    email          String?
    status         String?
    deliveryStatus String?
    size           String?

    products CartProductType[]
    address  shippingAddress?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

type CartProductType {
    id            String?
    name          String?
    product       String?
    description   String?
    category      String?
    selectedImage String?
    quantity      Int?
    price         Float?
    color         String?
    size          String?
}

type image {
    image     String
    color     String?
    colorCode String?
}

type shippingAddress {
    city         String?
    country      String?
    streetNumber String?
    streetName   String?
    postalCode   String?
    state        String?
}

enum Role {
    USER
    ADMIN
}

model Product {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    name        String?
    description String?
    price       Float?
    brand       String?
    category    String?
    gender      String?
    inStock     Boolean?
    images      image[]
}

model Newsletter {
    id    String  @id @default(auto()) @map("_id") @db.ObjectId
    email String?
}
